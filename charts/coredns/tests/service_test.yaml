# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Service Rendering Test

templates:
  - templates/service.yaml

set:
  deployment:
    enabled: true

  service:
    name: "custom-service-name"
    annotations:
      service-annotation: "value"
    selector:
      component: "dns"
    clusterIP: "10.96.0.10"
    clusterIPs:
      - "10.96.0.10"
      - "fd00::10"
    externalIPs:
      - "1.2.3.4"
    externalTrafficPolicy: "Local"
    loadBalancerIP: "4.3.2.1"
    loadBalancerClass: "my-lb-class"
    ipFamilyPolicy: "PreferDualStack"
    trafficDistribution: "Topology"

  customLabels:
    my-custom-label: "enabled"

  customAnnotations:
    custom-annotation: "test"

  isClusterService: true

release:
  namespace: test-ns

tests:
  - it: should render a valid Service with custom values
    asserts:
      - isKind:
          of: Service

      - equal:
          path: metadata.name
          value: custom-service-name

      - equal:
          path: metadata.namespace
          value: test-ns

      - equal:
          path: metadata.labels.my-custom-label
          value: enabled

      - equal:
          path: metadata.annotations.custom-annotation
          value: test

      - equal:
          path: metadata.annotations.service-annotation
          value: value

      - equal:
          path: spec.selector.component
          value: dns

      - equal:
          path: spec.clusterIP
          value: 10.96.0.10

      - equal:
          path: spec.clusterIPs[0]
          value: 10.96.0.10

      - equal:
          path: spec.clusterIPs[1]
          value: fd00::10

      - equal:
          path: spec.externalIPs[0]
          value: 1.2.3.4

      - equal:
          path: spec.externalTrafficPolicy
          value: Local

      - equal:
          path: spec.loadBalancerIP
          value: 4.3.2.1

      - equal:
          path: spec.loadBalancerClass
          value: my-lb-class

      - equal:
          path: spec.type
          value: ClusterIP

      - equal:
          path: spec.ipFamilyPolicy
          value: PreferDualStack

      - equal:
          path: spec.trafficDistribution
          value: Topology
